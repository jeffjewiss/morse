defmodule Morse do
  @moduledoc false

  def encode(string) do
    string
    |> String.codepoints
    |> Stream.map(&String.upcase/1)
    |> Stream.map(fn(c) -> map[c] || "?" end)
    |> Enum.join(" ")
  end

  defp map do
    %{
      "A" => ".-",
      "B" => "-...",
      "C" => "-.-.",
      "D" => "-..",
      "E" => ".",
      "F" => "..-.",
      "G" => "--.",
      "H" => "....",
      "I" => "..",
      "J" => ".---",
      "K" => "-.-",
      "L" => ".-..",
      "M" => "--",
      "N" => "-.",
      "O" => "---",
      "P" => ".--.",
      "Q" => "--.-",
      "R" => ".-.",
      "S" => "...",
      "T" => "-",
      "U" => "..-",
      "V" => "...-",
      "W" => ".--",
      "X" => "-..-",
      "Y" => "-.--",
      "Z" => "--..",
      "Á" => ".--.-",
      "Ä" => ".-.-",
      "É" => "..-..",
      "Ñ" => "--.--",
      "Ö" => "---.",
      "Ü" => "..--",
      "1" => ".----",
      "2" => "..---",
      "3" => "...--",
      "4" => "....-",
      "5" => ".....",
      "6" => "-....",
      "7" => "--...",
      "8" => "---..",
      "9" => "----.",
      "0" => "-----",
      "," => "--..--",
      "." => ".-.-.-",
      "?" => "..--..",
      ";" => "-.-.-",
      ":" => "---...",
      "/" => "-..-.",
      "-" => "-....-",
      "'" => ".----.",
      "(" =>:"'-.--.-",
      "_" => "..--.-",
      "@" => ".--.-.",
      " " => "......"
    }
  end
end
